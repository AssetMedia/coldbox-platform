<!-----------------------------------------------------------------------Author 	 :	Your NameDate     :	September 25, 2005Description : 				This is a ColdBox event handler.Please note that the extends needs to point to the eventhandler.cfcin the ColdBox system directory.extends = coldbox.system.eventhandler	-----------------------------------------------------------------------><cfcomponent name="ehGeneral" extends="coldbox.system.eventhandler" autowire="true">	<!------------------------------------------- CONSTRUCTOR (If Needed) ------------------------------------------->		<!--- Dependencies --->	<cfproperty name="ServiceLocator" type="ocm" scope="instance"><!------------------------------------------- PUBLIC ------------------------------------------->			<cffunction name="dspHome" access="public" returntype="void" output="false">		<cfargument name="Event" type="coldbox.system.beans.requestContext">		<cfset var rc = Event.getCollection()>		<!--- EXIT HANDLERS: --->		<cfset rc.xehProcessDSN = "ehGeneral.doProcessDSN">		<!--- Get DSN's --->		<cfset rc.DSNs = getDSNs() />		<!--- Set view to render --->		<cfset Event.setView("vwHome")>	</cffunction>		<cffunction name="doProcessDSN" access="public" returntype="void" output="false">		<cfargument name="Event" type="coldbox.system.beans.requestContext">		<cfset var thisDSN = "" />		<cfset var rc = Event.getCollection()>		<!--- EXIT HANDLERS: --->		<cfset rc.xehGenerate = "ehGeneral.doGenerate">				<!--- Get Setup --->		<cfset rc.DSNs = getDSNs() />		<cfset rc.dbType = getDBType()>		<cfset rc.tables = getTables()>				<!--- Param Values --->		<cfset paramComponents()>				<!--- Set View --->		<cfset Event.setView("vwComponents")>			</cffunction>		<cffunction name="doGenerate" access="public" returntype="void" output="false">		<cfargument name="Event" type="coldbox.system.beans.requestContext">		<cfset var rc = Event.getCollection()>		<cfset var ServiceLocator = instance.ServiceLocator>				<!--- EXIT HANDLERS: --->		<cfset rc.xehGenerate = "ehGeneral.doGenerate">				<!--- Get Setup --->		<cfset rc.DSNs = getDSNs() />		<cfset rc.dbType = getDBType()>		<cfset rc.tables = getTables()>				<!--- Get Table XML --->		<cfset ServiceLocator.getModel(rc.dbType).setTable(Event.getValue("table")) />		<cfset ServiceLocator.getModel(rc.dbType).setComponentPath(Event.getValue("componentPath")) />		<cfset rc.xmlTable = ServiceLocator.getModel(rc.dbType).getTableXML() />				<!--- Get Generated CFC's --->		<cfset ServiceLocator.getModel("xsl").configure(Event.getValue("dsn"),getSetting("xslBasePath")) />		<!--- get an array containing the generated code --->		<cfset rc.arrComponents = ServiceLocator.getModel("xsl").getComponents(rc.xmlTable) />				<!--- Set the View --->		<cfset Event.setView("vwGeneration")>	</cffunction>		<!------------------------------------------- PRIVATE REUSABLE EVENTS ------------------------------------------->	<cffunction name="getDSNs" access="private" returntype="struct" output="false">		<cfreturn instance.ServiceLocator.getModel("adminAPIService").getdatasources() />	</cffunction>		<cffunction name="getDBType" access="private" returntype="string" output="false">		<cfset var rc = controller.getRequestService().getContext().getCollection()>		<cfset var thisDSN = rc.DSNs[rc.dsn] />		<cfif thisDSN.driver eq "MSSQLServer"  or thisDSN.class contains "MSSQLServer">			<cfreturn "mssql" />		<cfelseif thisDSN.driver contains "mySQL" or thisDSN.class contains "mySQL">			<cfreturn "mysql" />		<cfelseif thisDSN.driver contains "Oracle" or thisDSN.class contains "Oracle">			<cfreturn "Oracle" />		</cfif>			</cffunction>		<cffunction name="getTables" access="private" returntype="query" output="false">		<cfset var rc = controller.getRequestService().getContext().getCollection()>				<cfset instance.ServiceLocator.getModel(rc.dbType).setDSN(rc.dsn)>				<cfreturn instance.ServiceLocator.getModel(rc.dbType).getTables() />	</cffunction>		<cffunction name="paramComponents" access="private" returntype="void" output="false">		<cfset var Event = controller.getRequestService().getContext()>		<cfset Event.paramValue("table", "")>		<cfset Event.paramValue("componentPath", "")>		<cfset Event.paramValue("generateService", "0")>		<cfset Event.paramValue("generateTO", "0")>		<cfset Event.paramValue("generateColdspringXML", "0")>	</cffunction>		</cfcomponent>