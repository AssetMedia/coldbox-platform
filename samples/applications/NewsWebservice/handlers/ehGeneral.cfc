<!-----------------------------------------------------------------------Author 	 :	Your NameDate     :	September 25, 2005Description :	fwsample.system.eventhandler-----------------------------------------------------------------------><cfcomponent name="ehGeneral" extends="coldboxSamples.system.eventhandler">	<!---		Constructor Goes Here if Needed		Sample below is a udf library, to be available to all methods.	--->	<!--- ************************************************************* --->	<!---		Remember that the returntype needs to be the same as the cfc name		This method should not be altered, unless you want code to be executed		when this handler is instantiated.	--->	<cffunction name="init" access="public" returntype="Any">		<cfargument name="controller" required="yes" hint="The reference to the framework controller">		<cfset super.init(arguments.controller)>		<cfreturn this>	</cffunction>	<!--- ************************************************************* --->	<!--- ************************************************************* --->	<cffunction name="onRequestStart" access="public" returntype="void">	<!--- On Request Start Code Here --->	</cffunction>	<!--- ************************************************************* --->	<!--- ************************************************************* --->	<cffunction name="onRequestEnd" access="public" returntype="void">	<!--- ON Request End Here --->	</cffunction>	<!--- ************************************************************* --->	<!--- ************************************************************* --->	<cffunction name="dspHome" access="public" returntype="void">		<!--- Do Your Logic Here to prepare a view --->		<cfscript>		// Set the View To Display, after Logic		setView("vwHome");		</cfscript>	</cffunction>	<!--- ************************************************************* --->	<!--- ************************************************************* --->	<cffunction name="doGetNews" access="public" returntype="void">		<!--- Do Your Logic Here to prepare a view --->		<cfscript>		try{			//Get webservice object reference			newsWSObj = getPlugin("webservices").getWsobj("newsfeed");		}		catch(Any e){			//Log Error using logger plugin			getPlugin("logger").logError("Error retrieveing news",e);			//Set message			getPlugin("messagebox").setMessage("error","Error retrieveing webservice. <br>#e.message#<br>#e.detail#");			//Set view and exit			setView("vwHome");			return;		}		try{			news = newsWSObj.giveMe_EN(news_number =10);		}		catch(Any e){			//Log Error using logger plugin			getPlugin("logger").logError("Error retrieveing news",e);			//Set message			getPlugin("messagebox").setMessage("error","Error retrieveing news feed. <br><br>Diagnostics:<br>#e.message#<br>#e.detail#");			//Set view and exit			setView("vwHome");			return;		}		//If news retrieved, save in the request collection.		setValue("newsfeed",news);		//Set a Messagebox for display purposes.		getPlugin("messagebox").setMessage("info","News retrieved and placed in request collection.");		//set the view		setView("vwHome");		</cfscript>	</cffunction>	<!--- ************************************************************* --->	<!--- ************************************************************* --->	<cffunction name="doGetNewsClientVersion" access="public" returntype="void">		<!--- Do Your Logic Here to prepare a view --->		<cfscript>		//Get webservice reference		newsWSObj = getPlugin("webservices").getWsobj("newsfeed");		news = newsWSObj.giveMe_EN(news_number =20);		//Using clientStorage plugin, save		getPlugin("clientStorage").setVar("newsfeed", news);		//Set the Messagebox		getPlugin("messagebox").setMessage("info","News retrieved using the clientstorage plugin.");		//Relocate to next Event, we can do this, since the data is in a storage.		setNextEvent("ehGeneral.dspHome");		</cfscript>	</cffunction>	<!--- ************************************************************* --->	<!--- ************************************************************* --->	<cffunction name="doClearClientStorageNews" access="public" returntype="void">		<!--- Do Your Logic Here to prepare a view --->		<cfscript>		//Clear ClientStorage News		getPlugin("clientStorage").deleteVar("newsfeed");		//Set the Messagebox		getPlugin("messagebox").setMessage("info","News deleted from client storage.");		//Relocate to next Event, we can do this, since the data is in a storage.		setNextEvent("ehGeneral.dspHome");		</cfscript>	</cffunction>	<!--- ************************************************************* ---></cfcomponent>