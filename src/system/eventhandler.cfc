<!-----------------------------------------------------------------------Author 	    :	Luis MajanoDate        :	September 23, 2005Description :	This is a cfc that all event handlers should extendModification History:01/12/2006 - Added fix for whitespace management.06/08/2006 - Updated for coldbox07/29/2006 - Datasource support via getdatsource()-----------------------------------------------------------------------><cfcomponent name="eventhandler" hint="This is the event handler base cfc." output="false" extends="controller"><!------------------------------------------- CONSTRUCTOR ------------------------------------------->		<cffunction name="init" access="public" returntype="any" output="false">		<!--- Shared Implementation Library --->		<cfset variables.sharedLibrary = CreateObject("component","util.sharedlibrary")>		<!--- memory reference for the request collection --->		<cfset variables.rc = getCollection()>		<!--- UDF Library Call --->		<cfset includeUDF()>		<cfreturn this>	</cffunction><!------------------------------------------- PUBLIC ------------------------------------------->	<!--- ************************************************************* --->	<cffunction name="includeUDF" access="public" hint="Includes the UDF Library if found and exists. Called only by the framework." output="false" returntype="void">		<!--- check if UDFLibraryFile is defined  --->		<cfif getSetting("UDFLibraryFile") neq "">			<!--- Check if file exists on app's includes --->			<cfif fileExists("#getSetting("ApplicationPath",1)#/#getSetting("UDFLibraryFile")#")>				<cfinclude template="/#getSetting("AppMapping")#/#getSetting("UDFLibraryFile")#">			<cfelseif fileExists(ExpandPath("#getSetting("UDFLibraryFile")#"))>				<cfinclude template="#getSetting("UDFLibraryFile")#">			<cfelse>				<cfthrow type="Framework.eventhandler.UDFLibraryNotFoundException" message="Error loading UDFLibraryFile.  The file declared in the config.xml: #getSetting("UDFLibraryFile")# was not found in your application's include directory or in the following location: #ExpandPath(getSetting("UDFLibraryFile"))#. Please make sure you verify the file's location.">			</cfif>		</cfif>	</cffunction>	<!--- ************************************************************* --->	<!--- ************************************************************* --->	<cffunction name="getCurrentLayout" access="public" hint="Gets the current set layout" returntype="string" output="false">		<cfreturn getValue("currentLayout","")>	</cffunction>	<!--- ************************************************************* --->	<!--- ************************************************************* --->	<cffunction name="getCurrentView" access="public" hint="Gets the current set view" returntype="string" output="false">		<cfreturn getValue("currentView","")>	</cffunction>	<!--- ************************************************************* --->	<!--- ************************************************************* --->	<cffunction name="getCurrentEvent" access="public" hint="Gets the current set event" returntype="string" output="false">		<cfreturn getValue("event","")>	</cffunction>	<!--- ************************************************************* --->	<!--- ************************************************************* --->	<cffunction name="getResource" access="public" output="false" returnType="string" hint="Facade to i18n.getResource">		<!--- ************************************************************* --->		<cfargument name="resource" type="string" hint="The resource to retrieve from the bundle.">		<!--- ************************************************************* --->		<cfreturn getPlugin("resourceBundle").getResource("#arguments.resource#")>	</cffunction>	<!--- ************************************************************* --->		<!--- ************************************************************* --->	<cffunction name="getDatasource" access="public" output="false" returnType="any" hint="I will return to you a datasourceBean according to the name of the datasource you wish to get from the configstruct (config.xml)">		<!--- ************************************************************* --->		<cfargument name="name" type="string" hint="The name of the datasource to get from the configstruct (name property in the config.xml)">		<!--- ************************************************************* --->		<cfreturn variables.sharedLibrary.getDatasource(arguments.name)>	</cffunction>	<!--- ************************************************************* --->		<!--- ************************************************************* --->	<cffunction name="getMyPlugin" access="public" hint="Get a custom plugin" returntype="any" output="false">		<!--- ************************************************************* --->		<cfargument name="plugin" type="string" hint="The Plugin object's name to instantiate" required="true" >		<!--- ************************************************************* --->		<cfreturn variables.sharedLibrary.getMyPlugin(arguments.plugin)>	</cffunction>	<!--- ************************************************************* --->		<!--- ************************************************************* --->	<cffunction name="renderView" access="Public" hint="Facade to renderer.renderView" output="false" returntype="Any">		<!--- ************************************************************* --->		<cfargument name="view" required="false" default="#getvalue('currentView','')#" type="string">			<!--- ************************************************************* --->		<cfreturn getPlugin("renderer").renderView(arguments.view)>	</cffunction>	<!--- ************************************************************* ---><!------------------------------------------- PRIVATE ------------------------------------------->	<!--- ************************************************************* --->	<cffunction name="throw" access="private" hint="Facade for cfthrow" output="false">		<!--- ************************************************************* --->		<cfargument name="message" 	type="string" 	required="yes">		<cfargument name="detail" 	type="string" 	required="no" default="">		<cfargument name="type"  	type="string" 	required="no" default="Framework">		<!--- ************************************************************* --->		<cfthrow type="#arguments.type#" message="#arguments.message#"  detail="#arguments.detail#">	</cffunction>	<!--- ************************************************************* --->	<!--- ************************************************************* --->	<cffunction name="dump" access="private" hint="Facade for cfmx dump" returntype="void">		<!--- ************************************************************* --->		<cfargument name="var" required="yes" type="any">		<!--- ************************************************************* --->		<cfdump var="#var#">	</cffunction>	<!--- ************************************************************* --->	<!--- ************************************************************* --->	<cffunction name="abort" access="private" hint="Facade for cfabort" returntype="void" output="false">		<cfabort>	</cffunction>	<!--- ************************************************************* --->	<!--- ************************************************************* --->	<cffunction name="include" access="private" hint="Facade for cfinclude" returntype="void" output="false">		<!--- ************************************************************* --->		<cfargument name="template" type="string">		<!--- ************************************************************* --->		<cfinclude template="#template#">	</cffunction>	<!--- ************************************************************* --->		<!--- ************************************************************* --->	<cffunction name="relocate" access="private" hint="Facade for cflocation" returntype="void" output="false">		<!--- ************************************************************* --->		<cfargument name="url" 		type="string" 	required="true">		<cfargument name="addtoken" type="boolean" 	required="false" default="false">		<!--- ************************************************************* --->		<cflocation urL="#arguments.url#" addtoken="#arguments.addtoken#">	</cffunction>	<!--- ************************************************************* --->	<!--- ************************************************************* --->	<cffunction name="filterQuery" access="private" returntype="query" hint="Filters a query by the given value" output="false">		<!--- ************************************************************* --->		<cfargument name="qry" 		type="query" 	required="yes" hint="Query to filter">		<cfargument name="field" 		type="string" 	required="yes" hint="Field to filter on">		<cfargument name="value" 		type="string" 	required="yes" hint="Value to filter on">		<cfargument name="cfsqltype" 	type="string" 	required="no" default="cf_sql_varchar" hint="The cf sql type of the value.">		<!--- ************************************************************* --->		<cfreturn variables.sharedLibrary.filterQuery(arguments.qry,arguments.field,arguments.value,arguments.cfsqltype)>	</cffunction>	<!--- ************************************************************* --->	<!--- ************************************************************* --->	<cffunction name="sortQuery" access="private" returntype="query" hint="Sorts a query by the given field" output="false">		<!--- ************************************************************* --->		<cfargument name="qry" 			type="query" 	required="yes" hint="Query to sort">		<cfargument name="sortBy" 		type="string" 	required="yes" hint="Sort by column(s)">		<cfargument name="sortOrder" 		type="string" 	required="no" default="ASC" hint="ASC/DESC">		<!--- ************************************************************* --->		<cfreturn variables.sharedLibrary.sortQuery(arguments.qry,arguments.sortBy,arguments.sortOrder)>	</cffunction>	<!--- ************************************************************* ---></cfcomponent>