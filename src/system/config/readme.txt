******************************************************************************Welcome To The ColdBox Coldfusion Framework!!ColdBox was created by Luis Majano (info@coldboxframework.com) (Ortus Solutions, Corp)http://www.coldboxframework.com|orgIf you use ColdBox in you applications, please let me know and try to cooperateto the debugging and enhancements effort. You can also give me gifts :) at http://www.amazon.com/o/registry/7DPYG3RZG3AF******************************************************************************COLDBOX LICENSE****************************************************************************** Attribution-ShareAlike 2.5ColdBox is open source. However, if you use this product please know that itis bound to the following Creative Commons Licence. If you use ColdBox, please make mention of it in your software or web site oradd a the Powered By Coldbox icon.Look at the license.txt******************************************************************************CREDITS & CONTRIBUTIONS****************************************************************************** I have included some software from other open source projects and I have usedsome code from open source projects in this framework. If I have forgottento name someone, please send me an email about it.GOD		I THANK GOD FOR HIS WISDOM FOR THIS PROJECT- Oscar Arevalo 	Fixes, ideas, sample apps, cfcViewer, documentation, ColdBoxReader- Sana Ullah	Bean factory, design, documentation, fixes- Rob Gonda	Design, ideas, architecture- Mark Mandel 	JavaLoader- Stephen Ostermiller 	Attesoro Java Resource Bundles Utility.- Paul Hastings 	Internationalization & Resource Bundles.- Raymond Camden 	Sample Applications, config.xml.cfm, etc- Aaron Conran 	Fixes, ideas, sample apps, documentation- Greg Lively 	FileWriter, FileReader, StringBuffer plugin- Dave Stanten		Web Services Refresh- Artur Kordowski	Zip Plugin- Dave Ross	Coldspring- Peter Bell	Lightwire******************************************************************************COLDBOX IMPORTANT LINKS****************************************************************************** Trac Site (Bug Tracking, Issues, Wiki)- http://ortus.svnrepository.com/coldbox/trac.cgiForums (Discussions, etc)- http://www.luismajano.com/forumsBlog- http://www.luismajano.com/blogColdBox Site- http://www.luismajano.com/projects/coldboxOfficial Site- http://www.coldboxframework.comOfficial Bug Email- bugs@coldboxframework.comOfficial Info Email- info@coldboxframework.com******************************************************************************COLDBOX INSTALLATION******************************************************************************You need to extract the ColdBox distribution file and place it on your web root:Windows IIS:[DRIVE]:\inetpub\wwwroot\coldbox*nix:/{web root}/coldboxCFMX/BlueDragon/Ralio Standalone Server{Install_Folder}/wwwroot/coldboxOr wherever you web root resides. You then use the ColdBox framework by including it from the index.cfm, look at the Application template's index file and readme.txtex: <cfinclude template="/coldbox/system/coldbox.cfm">This goes also for the extends property of your event handlers too: coldbox.system.eventhandlerYou can log in to the ColdBox Dashboardby going to your web server and the following address:http://{localhost}/coldbox/system/dashboard/index.cfmDefault Password: coldbox.The readme.txt in the Application Template folder gives you an in depth overviewof how to configure your first ColdBox application.******************************************************************************SYSTEM REQUIREMENTS******************************************************************************- ColdFusion MX 6.X and above- BlueDragon 6.2.1- Railo Experimental- Application Scope for the Frameworks internal structures & i18N support. (Required)- Session Scope in order to use the sessionstorage plugin and messagebox plugin if used. (optional)- Client Scope in order to use the clientstorage and messagebox plugin. (optional)******************************************************************************CHANGELOG******************************************************************************Version 0.9.X (June 2006)- Version updated to 0.9.x due to the fact that I had a name change and completerewrite of the app from my TeXtus framework that I developed last year for private use.Version 1.0.0 (July 5, 2006)- First public beta versionVersion 1.0.1 (July 10, 2006)- Fixes for ApplicationStartHandler.Version 1.0.2 (July 2006)- CustomHandler receives the ExceptionBean via the request collection.- Eliminated unused files, code cleanup.- JavaLoader 0.2 plugin integration (Could not wait to release this)- datasourceBean is in place, forgot to include it.Version 1.1.0 (October 2006) CODENAME: JOHN 3:16- Varscoper Checks, Code Optimization and cleanup.- Global Server Installation Method.- CFMX 6.X & BlueDragon are now fully Supported.- Datasources support via config.xml. You can now use the getDatasource("name") in the  event handlers/plugins to retrieve a datsource bean.- Mail Settings bean support. You can now use the getMailSettings() to retreive it.- Messagebox.render(clearFlag) now has a clearFlag in order to clear or not, the message   structure after rendering.- Eventhandler.cfc code optimization, no longer need of writing an init method.   PLEASE REMOVE THEM unless you have any code that needs to be executed every time  an event is called. Look at:  http://ortus.svnrepository.com/coldbox/trac.cgi/wiki/cbEventHandlersGuide- Renderview can now accept a view name as a parameter. You can then render a view   anywhere you want, layouts, within views, event handlers, etc, and as content variables.  renderView("myTags/main_menu")- New Plugins: FileWriter & StringBuffer- Framework/Application extensions via custom plugins, declared in config.xml.cfm- Coldbox Logging Facilities: ColdBox now provides you with a per application   logging facility for errors and custom (error|fatal|information|warning) entries by   simplify filling out two settings in your config.xml and using the logger plugin.- Event Handlers/Plugins now have a "rc" scope available, that is a direct line to the request collection.- New Method: paramValue("var name","default") same as cfparam but for the request collection.- cfcViewer plugin was revised. You can now use it to render documentation with any  stylesheet.- New i18n and Resource Bundles Plugins based on Paul Hastings work.- ATTESORO JAVA RESOURCE BUNDLES UTILITY IS INCLUDED.- New Method: getSettingStructure( structure, deep_copy_flag ) Retrieves the entire configStruct  or the fwSettingsStructure.- Mapping of Exception Types: http://ortus.svnrepository.com/coldbox/trac.cgi/wiki/cbExceptionsList- Check out the latest API: http://www.coldboxframework.com/documents/cfdocs/index.cfm- New Dashboard (Will be release later)- Eclipse Snippets- New sample applications: i18n Gallery, samples gallery, coldboxreader, Illidium CFC GeneratorVersion 2.0.0 ( February, 2007 ) CODENAME: JOHN 4:14- New RequestContext bus. This is in order to enable caching and encapsulation of the   request collection. Please see the compatibility guide. Your 1.1.0 and below code   will have to be modified slightly to accomodate this.  - Addition of new Application Settings: ReinitPassword, onInvalidEvent, HandlerCaching	- ReinitPassword: used to protect the fwreinit flag. Usage: fwreinit=password	- onInvalidEvent: write the event to execute when an invalid event is detected, ehGeneral.dspHome	- HandlerCaching: The framework will now cache your event handlers in application scope.	                  Get ready for your application to FLY!!! Please turn off in development.	                  This is also an intelligent cache. Look at documentation.- Addition of an 'alias' property to the Datasource element, this is the alias to your name (dsn).  This is a mandatory property so please update your XML.  <Datasource alias="blog_dsn" name="myblog" dbtype="oracle" />  - Coldbox OCM (Object Cache Manager) : A facility for in-memory caching. This facility caches your  event handlers, plugins, custom plugins and anything you want. Look at API for usage.	- The framework has a reap frequency in which once every cycle,	  the framework will remove objects from the cache that have expired. This way, reaping is	  not performed on every request. A great way to balance cache access and reaping.	  Change in the framework's settings.xml	- Metadata settings for caching for custom plugins and handlers via the cfcomponent tag:	  <cfcomponent name="handler" extends="coldbox.system.eventhandler" cache="true" cachetimeout="500">	  The cachetimeout is in minutes. The cache flag is by default set to true if not set. So if you do not set it 	  explicitly to false, the framework will cache it at the default framework's timeout.- Plugins:     - Beanfactory.cfc - Addition of the populateBean method. It can now populate a named or instantiated                        bean from the request collection. Great for setting a bean with form data.                         It follows the bean contract, thanks to Sanah Ullah    - FileUtilities.cfc - Added two new methods: getJVMFreeMemory(), getJVMTotalMemory()    - IOC.cfc - Added Inversion Of Control support via coldspring or lightwire.      Coldspring is the only one supported now. Lightwire will be added in the next version.    - sessionstorage.cfc - New facade plugin to use session scope for permanent values    - New method to the renderer plugin: renderExternalview(). Will render an external view. Any      type of view: js,gif,etc.- New debugging Panel, adds cache information- Several bug fixes, look at trac site.- Sample Applications:	- Updated the entire Illidium CFC Generator by Brian Rinaldi. (Pre Flex)	- Galleon Forums updated to version 1.7.003	- ColdBoxReader now moved to a service architecture using ColdSpring and ColdBox new 	  IOC plugin.- New eclipse snippets.- Refactoring and code optimization.- The framework now supports multi-package handler layout. you can now define packages  for all your handlers due to ColdBox's new event registration system.- The framework now supports for compiled code execution. Event multi-package  compiled layouts.   ******************************************************************************THE DAILY BREAD******************************************************************************"I am the way, and the truth, and the life; no one comes to the Father, but by me (JESUS)"Jn 14:1-12"Anyone who drinks the water I give will never thirst— not ever. The water I give will be an artesian spring within, gushing fountains of endless life."Jn 4:14******************************************************************************