
[[Dashboard | << Back to Dashboard ]]

{| align="right"
| __TOC__
|}

= Exploring the AntiSamy Plugin =


== Overview ==
OWASP AntiSamy Project that provides XSS cleanup operations to ColdBox applications


== HtmlSanitizer ==
clean HTML from XSS scripts using the AntiSamy project. The available policies are antisamy, ebay,myspace or slashdot

=== Returns ===
* This function returns ''Any''


=== Arguments ===

{| cellpadding="5", class="tablelisting"
! '''Key''' !! '''Type'''  !! '''Required''' !! '''Default''' !! '''Description''' 
|-
| HtmlData || string || Yes || --- || The html text to sanitize
|-
| PolicyFile || string || No || myspace || Provide policy file to scan html. Available options are: antisamy, ebay, myspace, slashdot
|}

=== Examples ===

[[Dashboard | << Back to Dashboard ]]

{| align="right"
| __TOC__
|}

= Exploring the ApplicationStorage Plugin =


== Overview ==
Application Storage plugin. It provides the user with a mechanism for permanent data storage using the application scope.


== setVar ==
Set a new permanent variable.

=== Returns ===
* This function returns ''void''


=== Arguments ===

{| cellpadding="5", class="tablelisting"
! '''Key''' !! '''Type'''  !! '''Required''' !! '''Default''' !! '''Description''' 
|-
| name || string || Yes || --- || The name of the variable.
|-
| value || any || Yes || --- || The value to set in the variable.
|}

=== Examples ===

== getVar ==
Get a new permanent variable. If the variable does not exist. The method returns blank unless using the default return argument.

=== Returns ===
* This function returns ''any''


=== Arguments ===

{| cellpadding="5", class="tablelisting"
! '''Key''' !! '''Type'''  !! '''Required''' !! '''Default''' !! '''Description''' 
|-
| name || string || Yes || --- || The variable name to retrieve.
|-
| default || any || No ||  || The default value to set. If not used, a blank is returned.
|}

=== Examples ===

== removeStorage ==
remove the entire storage from scope

=== Returns ===
* This function returns ''void''


=== Examples ===

== exists ==
Checks wether the permanent variable exists.

=== Returns ===
* This function returns ''boolean''


=== Arguments ===

{| cellpadding="5", class="tablelisting"
! '''Key''' !! '''Type'''  !! '''Required''' !! '''Default''' !! '''Description''' 
|-
| name || string || Yes || --- || The variable name to retrieve.
|}

=== Examples ===

== clearAll ==
Clear the entire coldbox application storage

=== Returns ===
* This function returns ''void''


=== Examples ===

== deleteVar ==
Tries to delete a permanent application variable. Returns True if deleted.

=== Returns ===
* This function returns ''boolean''


=== Arguments ===

{| cellpadding="5", class="tablelisting"
! '''Key''' !! '''Type'''  !! '''Required''' !! '''Default''' !! '''Description''' 
|-
| name || string || Yes || --- || The variable name to retrieve.
|}

=== Examples ===

== getStorage ==
Get the entire storage scope structure

=== Returns ===
* This function returns ''struct''


=== Examples ===
