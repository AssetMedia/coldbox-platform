<!-----------------------------------------------------------------------********************************************************************************Copyright 2005-2008 ColdBox Framework by Luis Majano and Ortus Solutions, Corpwww.coldboxframework.com | www.luismajano.com | www.ortussolutions.com********************************************************************************Author 	 :	Luis MajanoDate     :	September 23, 2005Description :	This is a JVM utilities library.Modification History:-----------------------------------------------------------------------><cfcomponent name="JVMUtils"       		 hint="This is a JVM Utilities CFC"       		 extends="coldbox.system.Plugin"       		 output="false"       		 cache="true"       		 cachetimeout="0"><!------------------------------------------- CONSTRUCTOR ------------------------------------------->	<cffunction name="init" access="public" returntype="JVMUtils" output="false">		<cfargument name="controller" type="any" required="true">		<cfscript>			super.Init(arguments.controller);						/* Plugin Properties */			setpluginName("JVM Utilities Plugin");			setpluginVersion("1.0");			setpluginDescription("This plugin provides various OS/java utilities");			setpluginAuthor("Luis Majano, Sana Ullah");			setpluginAuthorURL("http://www.coldbox.org");						return this;		</cfscript>	</cffunction><!------------------------------------------- OS/JVM SPECIFIC METHODS ------------------------------------------->	<!--- ************************************************************* --->	<cffunction name="getOSFileSeparator" access="public" returntype="string" output="false" hint="Get the operating system's file separator character">		<cfscript>		var objFile =  createObject("java","java.lang.System");		return objFile.getProperty("file.separator");		</cfscript>	</cffunction>	<!--- ************************************************************* --->	<cffunction name="getOSPathSeparator" access="public" returntype="string" output="false" hint="Get the operating system's path separator character.">		<cfscript>		var objFile =  createObject("java","java.lang.System");		return objFile.getProperty("path.separator");		</cfscript>	</cffunction>	<!--- ************************************************************* --->	<cffunction name="getOSName" access="public" returntype="string" output="false" hint="Get the operating system's name">		<cfscript>		var objFile =  createObject("java","java.lang.System");		return objFile.getProperty("os.name");		</cfscript>	</cffunction>	<!--- ************************************************************* --->	<cffunction name="getInetHost" access="public" returntype="string" output="false" hint="Get the hostname of the executing machine.">		<cfreturn CreateObject("java", "java.net.InetAddress").getLocalHost().getHostName()>	</cffunction>	<!--- ************************************************************* --->	<cffunction name="getIPAddress" access="public" returntype="string" output="false" hint="Get the ip address of the executing hostname machine.">		<cfreturn CreateObject("java", "java.net.InetAddress").getLocalHost().getHostAddress()>	</cffunction>	<!--- ************************************************************* --->	<cffunction name="getJavaRuntime" access="public" returntype="string" output="false" hint="Get the java runtime version">		<cfreturn CreateObject("java", "java.lang.System").getProperty("java.runtime.version")>	</cffunction>	<!--- ************************************************************* --->	<cffunction name="getJavaVersion" access="public" returntype="string" output="false" hint="Get the java version.">		<cfreturn CreateObject("java", "java.lang.System").getProperty("java.version")>	</cffunction>	<!--- ************************************************************* --->	<cffunction name="getJVMFreeMemory" access="public" returntype="string" output="false" hint="Get the JVM's free memory.">		<cfscript>		return CreateObject("java", "java.lang.Runtime").getRuntime().freeMemory();		</cfscript>	</cffunction>	<!--- ************************************************************* --->	<cffunction name="getJVMTotalMemory" access="public" returntype="string" output="false" hint="Get the JVM's total memory.">		<cfreturn CreateObject("java", "java.lang.Runtime").getRuntime().totalMemory()>	</cffunction>	<!--- ************************************************************* ---></cfcomponent>